<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptMatch" xml:space="preserve">
    <value>Czy chcesz zaakceptować parę z tą osobą?</value>
  </data>
  <data name="Accesibility" xml:space="preserve">
    <value>Otrzymałeś pełny dostęp do funkcjonalności strony</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Wiek</value>
  </data>
  <data name="BackToProfile" xml:space="preserve">
    <value>Powrót do profilu</value>
  </data>
  <data name="Birth" xml:space="preserve">
    <value>Data urodzenia</value>
  </data>
  <data name="ChooseG" xml:space="preserve">
    <value>Wybierz płeć</value>
  </data>
  <data name="ChoosePhoto" xml:space="preserve">
    <value>Wybierz zdjęcie</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Potwierdź hasło</value>
  </data>
  <data name="DescribeProblem" xml:space="preserve">
    <value>Opisz swój problem</value>
  </data>
  <data name="EditH" xml:space="preserve">
    <value>Zmień hobby</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Adres e-mail</value>
  </data>
  <data name="FAQ1" xml:space="preserve">
    <value>Tutaj znajdziesz odpowiedzi na najczęściej zadawane pytania dotyczące naszej strony internetowej.</value>
  </data>
  <data name="FAQ2" xml:space="preserve">
    <value>Jak mogę założyć konto na stronie Amora?</value>
  </data>
  <data name="FAQ3" xml:space="preserve">
    <value>Aby utworzyć konto na stronie Amora, musisz przejść na stronę główną i kliknąć przycisk „Zarejestruj się”. Następnie wprowadź swoje dane osobowe i wybierz unikalną nazwę użytkownika i hasło. Po zarejestrowaniu będziesz mógł zalogować się na nowo utworzone konto.</value>
  </data>
  <data name="FAQ4" xml:space="preserve">
    <value>Czy mogę edytować swoje hobby?</value>
  </data>
  <data name="FAQ5" xml:space="preserve">
    <value>Tak, możesz edytować swoje hobby w ustawieniach profilu. Po zalogowaniu się na swoje konto przejdź do sekcji „Edytuj hobby”, gdzie będziesz mieć możliwość edycji swoich hobby.</value>
  </data>
  <data name="FAQ6" xml:space="preserve">
    <value>Jak mogę skontaktować się z obsługą klienta w przypadku wystąpienia problemów?</value>
  </data>
  <data name="FAQ7" xml:space="preserve">
    <value>Jeśli masz jakiekolwiek pytania lub problemy związane z korzystaniem ze strony Amora, skontaktuj się z naszym zespołem obsługi klienta za pośrednictwem formularza kontaktowego dostępnego na stronie głównej. Nasz zespół dołoży wszelkich starań, aby odpowiedzieć na Twoje zapytania tak szybko, jak to możliwe.</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Kobieta</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Płeć</value>
  </data>
  <data name="GoToHome" xml:space="preserve">
    <value>Idź do Strony Główej</value>
  </data>
  <data name="Hobby" xml:space="preserve">
    <value>Zainteresowania</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="JokeText" xml:space="preserve">
    <value>Oto żart, który może Ci pomóc podczas pierwszej rozmowy telefonicznej z parą.</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Zaloguj się</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Wyloguj się</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Mężczyzna</value>
  </data>
  <data name="Match" xml:space="preserve">
    <value>Pary</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Imię</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nie</value>
  </data>
  <data name="NoAccess" xml:space="preserve">
    <value>Musisz się zalogować aby otrzymać pełną funcjonalność strony</value>
  </data>
  <data name="NoMatches" xml:space="preserve">
    <value>Brak par</value>
  </data>
  <data name="NoMatchesFound" xml:space="preserve">
    <value>Nie znaleziono żadnej pary</value>
  </data>
  <data name="NoMatchesFoundText" xml:space="preserve">
    <value>Niestety, nie znaleźliśmy w tej chwili dla Ciebie więcej dopasowań. Sprawdź później.</value>
  </data>
  <data name="NoNotificationsFound" xml:space="preserve">
    <value>Brak powiadomień</value>
  </data>
  <data name="NoPreviousM" xml:space="preserve">
    <value>Nie znaleziono poprzednich par</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Powiadomienia</value>
  </data>
  <data name="NoUserData" xml:space="preserve">
    <value>Brak danych o profilu</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Hasło</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>NumerTelefonu</value>
  </data>
  <data name="PreviousM" xml:space="preserve">
    <value>Poprzednie Pary</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Prywatność</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profil</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Rejestracja</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Rejestracja</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Zgłoś problem</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="Sumbit" xml:space="preserve">
    <value>Wyślij</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Nazwisko</value>
  </data>
  <data name="UploadPhoto" xml:space="preserve">
    <value>Wyślij zdjęcie</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Witamy na Amorze</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Tak</value>
  </data>
</root>