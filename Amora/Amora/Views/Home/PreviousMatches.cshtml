@model List<Amora.Models.RegisterViewModel>
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Home Page";
    var userName = Context.Session.GetString("Name");

    var client = new HttpClient();
    var response = await client.GetAsync("https://official-joke-api.appspot.com/random_joke");
    var jokeJson = await response.Content.ReadAsStringAsync();
    var joke = JsonConvert.DeserializeObject<Joke>(jokeJson);
}
@{
    ViewData["Title"] = "Previous Matches";
}
<style>
    body {
        background-image: url('/Images/Website/background.jpg');
        background-size: cover;
        background-repeat: no-repeat;
    }
</style>

@if (Model.Count == 0)
{
    <h2 class="display-4">Previous Matches</h2>
    <p>No previous matches found.</p>
}
else
{
    <div class="bg-danger rounded p-3 shadow">
        <h5>Here's a joke that might help you on your first phone call with match</h5>
        <p class="alert-heading">@joke.Setup <br /> @joke.Punchline</p>
    </div>
    <div class="container">
        <h2 class="display-4">Previous Matches</h2>
        <div class="row">
            @foreach (var user in Model)
            {
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm bg-danger d-flex h-100">
                        <img src="~/Images/@user.Photo" class="card-img-top" alt="@user.Name's photo">
                        <div class="card-body">
                            <h5 class="card-title">@($"{user.Name} {user.Surname}")</h5>
                            <p class="card-text">Gender: @user.Gender</p>
                            <p class="card-text">Age: @(DateTime.Now.Year - user.Age.Year)</p>
                            <p class="card-text">Hobby: @user.Hobby</p>
                            <p class="card-text">Phone number: @user.PhoneNumber</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
